import { MigrationInterface, QueryRunner } from "typeorm";

export class DatabaseInit1742903791473 implements MigrationInterface {
    name = 'DatabaseInit1742903791473'

    public async up(queryRunner: QueryRunner): Promise<void> {
        await queryRunner.query(`CREATE TABLE \`outlets\` (\`createdAt\` datetime(2) NOT NULL DEFAULT CURRENT_TIMESTAMP(2), \`updatedAt\` datetime(2) NOT NULL DEFAULT CURRENT_TIMESTAMP(2) ON UPDATE CURRENT_TIMESTAMP(2), \`id\` int NOT NULL AUTO_INCREMENT, \`name\` varchar(255) NOT NULL, \`description\` text NULL, \`status\` enum ('LIVE', 'INACTIVE', 'ONBOARDING', 'TEMPORARILY_CLOSED', 'PERMANENTLY_CLOSED', 'COMING_SOON') NOT NULL DEFAULT 'ONBOARDING', \`latitude\` decimal(9,6) NULL, \`longitude\` decimal(9,6) NULL, \`phoneNumber\` varchar(15) NULL, \`email\` varchar(255) NULL, \`website\` varchar(255) NULL, \`clientId\` int NULL, \`addressId\` int NULL, \`outletBannerImages\` text NULL, \`outletVideos\` text NULL, \`addressIdtest\` int NULL, PRIMARY KEY (\`id\`)) ENGINE=InnoDB`);
        await queryRunner.query(`CREATE TABLE \`address\` (\`createdAt\` datetime(2) NOT NULL DEFAULT CURRENT_TIMESTAMP(2), \`updatedAt\` datetime(2) NOT NULL DEFAULT CURRENT_TIMESTAMP(2) ON UPDATE CURRENT_TIMESTAMP(2), \`addressId\` int NOT NULL AUTO_INCREMENT, \`propertyNumber\` varchar(255) NOT NULL, \`country\` varchar(56) NOT NULL DEFAULT 'india', \`state\` varchar(255) NOT NULL, \`district\` varchar(64) NULL, \`city\` varchar(64) NULL, \`pincode\` int NOT NULL, \`street\` varchar(64) NULL, \`landmark\` varchar(64) NULL, \`outletId\` int NULL, UNIQUE INDEX \`REL_b18fdd2e72819569958ab5bd10\` (\`outletId\`), PRIMARY KEY (\`addressId\`)) ENGINE=InnoDB`);
        await queryRunner.query(`CREATE TABLE \`device_token\` (\`createdAt\` datetime(2) NOT NULL DEFAULT CURRENT_TIMESTAMP(2), \`updatedAt\` datetime(2) NOT NULL DEFAULT CURRENT_TIMESTAMP(2) ON UPDATE CURRENT_TIMESTAMP(2), \`id\` int NOT NULL AUTO_INCREMENT, \`deviceToken\` varchar(255) NOT NULL, \`platform\` varchar(255) NOT NULL, \`userId\` int NOT NULL, \`userType\` varchar(255) NOT NULL, \`isActive\` tinyint NOT NULL, PRIMARY KEY (\`id\`)) ENGINE=InnoDB`);
        await queryRunner.query(`CREATE TABLE \`event_configuration_entity\` (\`createdAt\` datetime(2) NOT NULL DEFAULT CURRENT_TIMESTAMP(2), \`updatedAt\` datetime(2) NOT NULL DEFAULT CURRENT_TIMESTAMP(2) ON UPDATE CURRENT_TIMESTAMP(2), \`id\` int NOT NULL AUTO_INCREMENT, \`eventName\` enum ('ORDER_PLACED') NOT NULL, \`targetUser\` json NOT NULL, \`targetClientRoles\` text NOT NULL, \`notificationType\` json NOT NULL, \`emailTemplate\` json NULL, \`smsTemplate\` varchar(255) NULL, \`pushNotificationTemplate\` varchar(255) NULL, PRIMARY KEY (\`id\`)) ENGINE=InnoDB`);
        await queryRunner.query(`CREATE TABLE \`customers\` (\`createdAt\` datetime(2) NOT NULL DEFAULT CURRENT_TIMESTAMP(2), \`updatedAt\` datetime(2) NOT NULL DEFAULT CURRENT_TIMESTAMP(2) ON UPDATE CURRENT_TIMESTAMP(2), \`id\` int NOT NULL AUTO_INCREMENT, \`name\` varchar(100) NOT NULL, \`contactNumber\` varchar(15) NOT NULL, \`email\` varchar(100) NOT NULL, \`password\` varchar(255) NOT NULL, \`whitelabelId\` int NOT NULL DEFAULT '1', INDEX \`IX_customers_contactNumber\` (\`contactNumber\`), INDEX \`IX_customers_email\` (\`email\`), UNIQUE INDEX \`IDX_725e85c19c7c199dcb6ea7e49a\` (\`contactNumber\`), UNIQUE INDEX \`IDX_8536b8b85c06969f84f0c098b0\` (\`email\`), PRIMARY KEY (\`id\`)) ENGINE=InnoDB`);
        await queryRunner.query(`CREATE TABLE \`customer_coupon_redemption\` (\`createdAt\` datetime(2) NOT NULL DEFAULT CURRENT_TIMESTAMP(2), \`updatedAt\` datetime(2) NOT NULL DEFAULT CURRENT_TIMESTAMP(2) ON UPDATE CURRENT_TIMESTAMP(2), \`id\` int NOT NULL AUTO_INCREMENT, \`redeemedAt\` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP, PRIMARY KEY (\`id\`)) ENGINE=InnoDB`);
        await queryRunner.query(`CREATE TABLE \`coupon_entity\` (\`createdAt\` datetime(2) NOT NULL DEFAULT CURRENT_TIMESTAMP(2), \`updatedAt\` datetime(2) NOT NULL DEFAULT CURRENT_TIMESTAMP(2) ON UPDATE CURRENT_TIMESTAMP(2), \`id\` int NOT NULL AUTO_INCREMENT, \`code\` varchar(255) NOT NULL, \`discountType\` enum ('PERCENTAGE', 'FIXED') NOT NULL DEFAULT 'PERCENTAGE', \`discountValue\` decimal(10,2) NOT NULL, \`minOrderValue\` decimal(10,2) NULL, \`maximumDiscountCapping\` decimal(10,2) NULL, \`globalRedemptionLimit\` int NULL, \`perUserRedemptionLimit\` int NULL, \`validFrom\` timestamp NOT NULL, \`owner\` enum ('ADMIN', 'CLIENT') NOT NULL DEFAULT 'ADMIN', \`status\` enum ('ACTIVE', 'INACTIVE') NOT NULL DEFAULT 'ACTIVE', \`couponType\` enum ('ONE_TIME', 'AFTER_INTERVAL', 'RECURRING', 'LOYALTY_BASED', 'REFERRAL', 'SEASONAL', 'BIRTHDAY_ANNIVERSARY', 'NEW_SERVICE_PROMO') NOT NULL DEFAULT 'ONE_TIME', \`validTo\` timestamp NOT NULL, \`isActive\` tinyint NOT NULL DEFAULT 1, UNIQUE INDEX \`IDX_8e9805197ff5ac6ef181703bfb\` (\`code\`), PRIMARY KEY (\`id\`)) ENGINE=InnoDB`);
        await queryRunner.query(`CREATE TABLE \`coupon_outlet_mapping\` (\`createdAt\` datetime(2) NOT NULL DEFAULT CURRENT_TIMESTAMP(2), \`updatedAt\` datetime(2) NOT NULL DEFAULT CURRENT_TIMESTAMP(2) ON UPDATE CURRENT_TIMESTAMP(2), \`id\` int NOT NULL AUTO_INCREMENT, \`deletedAt\` datetime(6) NULL, \`status\` enum ('ACCEPT', 'REJECT') NOT NULL, \`couponId\` int NULL, \`outletId\` int NULL, PRIMARY KEY (\`id\`)) ENGINE=InnoDB`);
        await queryRunner.query(`CREATE TABLE \`admin\` (\`createdAt\` datetime(2) NOT NULL DEFAULT CURRENT_TIMESTAMP(2), \`updatedAt\` datetime(2) NOT NULL DEFAULT CURRENT_TIMESTAMP(2) ON UPDATE CURRENT_TIMESTAMP(2), \`id\` int NOT NULL AUTO_INCREMENT, \`name\` varchar(100) NOT NULL, \`contactNumber\` varchar(255) NOT NULL, \`roleId\` int NOT NULL, \`email\` varchar(100) NOT NULL, \`password\` varchar(255) NOT NULL, INDEX \`IX_admins_contactNumber\` (\`contactNumber\`), INDEX \`IX_admins_email\` (\`email\`), UNIQUE INDEX \`IDX_dc1eecd88112832edb8329ba7b\` (\`contactNumber\`), UNIQUE INDEX \`IDX_de87485f6489f5d0995f584195\` (\`email\`), PRIMARY KEY (\`id\`)) ENGINE=InnoDB`);
        await queryRunner.query(`CREATE TABLE \`resources\` (\`createdAt\` datetime(2) NOT NULL DEFAULT CURRENT_TIMESTAMP(2), \`updatedAt\` datetime(2) NOT NULL DEFAULT CURRENT_TIMESTAMP(2) ON UPDATE CURRENT_TIMESTAMP(2), \`resourceId\` int NOT NULL AUTO_INCREMENT, \`name\` varchar(255) NOT NULL, \`label\` varchar(255) NOT NULL, \`user\` varchar(255) NOT NULL, PRIMARY KEY (\`resourceId\`)) ENGINE=InnoDB`);
        await queryRunner.query(`CREATE TABLE \`otp\` (\`id\` int NOT NULL AUTO_INCREMENT, \`recipient\` varchar(255) NOT NULL, \`type\` enum ('EMAIL', 'NUMBER') NULL, \`otp\` int NOT NULL, \`isUsed\` tinyint NOT NULL DEFAULT 0, \`expirationTime\` timestamp NOT NULL, \`resendAttempts\` int NOT NULL DEFAULT '0', PRIMARY KEY (\`id\`)) ENGINE=InnoDB`);
        await queryRunner.query(`CREATE TABLE \`order_fulfillment_otp\` (\`id\` int NOT NULL AUTO_INCREMENT, \`clientId\` int NOT NULL, \`customerId\` int NOT NULL, \`orderId\` int NOT NULL, \`otp\` int NOT NULL, \`type\` varchar(255) NOT NULL, \`expirationTime\` datetime NOT NULL, PRIMARY KEY (\`id\`)) ENGINE=InnoDB`);
        await queryRunner.query(`CREATE TABLE \`roles\` (\`id\` int NOT NULL AUTO_INCREMENT, \`name\` varchar(255) NOT NULL, \`isSystemDefined\` tinyint NOT NULL, \`scope\` enum ('ADMIN', 'CLIENT', 'CUSTOMER') NOT NULL, \`outletId\` int NULL, PRIMARY KEY (\`id\`)) ENGINE=InnoDB`);
        await queryRunner.query(`CREATE TABLE \`orders\` (\`createdAt\` datetime(2) NOT NULL DEFAULT CURRENT_TIMESTAMP(2), \`updatedAt\` datetime(2) NOT NULL DEFAULT CURRENT_TIMESTAMP(2) ON UPDATE CURRENT_TIMESTAMP(2), \`orderId\` int NOT NULL AUTO_INCREMENT, \`amountPaid\` decimal(10,2) NOT NULL, \`paymentId\` varchar(255) NULL, \`customerId\` int NOT NULL, \`outletId\` int NOT NULL, \`status\` varchar(255) NOT NULL DEFAULT 'ORDER_PLACED', \`reasonForRejection\` varchar(255) NULL, PRIMARY KEY (\`orderId\`)) ENGINE=InnoDB`);
        await queryRunner.query(`CREATE TABLE \`appointments\` (\`createdAt\` datetime(2) NOT NULL DEFAULT CURRENT_TIMESTAMP(2), \`updatedAt\` datetime(2) NOT NULL DEFAULT CURRENT_TIMESTAMP(2) ON UPDATE CURRENT_TIMESTAMP(2), \`appointmentId\` int NOT NULL AUTO_INCREMENT, \`orderId\` int NOT NULL, \`startTime\` datetime NOT NULL, \`endTime\` datetime NOT NULL, \`outletId\` int NOT NULL, \`customerId\` int NOT NULL, \`status\` enum ('PENDING', 'CONFIRMED', 'CANCELLED_BY_CUSTOMER', 'CANCELLED_BY_SALON', 'RESCHEDULED', 'NO_SHOW', 'COMPLETED') NOT NULL DEFAULT 'PENDING', \`actualStartTime\` datetime NULL, \`actualEndTime\` datetime NULL, \`appointmentSource\` enum ('CUSTOMER', 'WALK_IN', 'CALL', 'ADMIN') NOT NULL DEFAULT 'CUSTOMER', PRIMARY KEY (\`appointmentId\`)) ENGINE=InnoDB`);
        await queryRunner.query(`CREATE TABLE \`order_items\` (\`createdAt\` datetime(2) NOT NULL DEFAULT CURRENT_TIMESTAMP(2), \`updatedAt\` datetime(2) NOT NULL DEFAULT CURRENT_TIMESTAMP(2) ON UPDATE CURRENT_TIMESTAMP(2), \`orderItemId\` int NOT NULL AUTO_INCREMENT, \`serviceId\` varchar(255) NOT NULL, \`quantity\` int NOT NULL, \`discount\` decimal(10,2) NOT NULL DEFAULT '0.00', \`notes\` text NULL, \`status\` varchar(255) NOT NULL DEFAULT 'ACCEPTED', \`orderId\` int NULL, PRIMARY KEY (\`orderItemId\`)) ENGINE=InnoDB`);
        await queryRunner.query(`CREATE TABLE \`client\` (\`createdAt\` datetime(2) NOT NULL DEFAULT CURRENT_TIMESTAMP(2), \`updatedAt\` datetime(2) NOT NULL DEFAULT CURRENT_TIMESTAMP(2) ON UPDATE CURRENT_TIMESTAMP(2), \`id\` int NOT NULL AUTO_INCREMENT, \`name\` varchar(255) NOT NULL, \`email\` varchar(255) NOT NULL, \`password\` varchar(255) NULL, \`contactNumber\` varchar(255) NOT NULL, \`roleId\` int NOT NULL, \`gender\` varchar(255) NOT NULL, \`pastExperience\` int NOT NULL, \`about\` varchar(255) NOT NULL, \`outletId\` int NULL, \`profilePhotos\` text NULL, UNIQUE INDEX \`IDX_6436cc6b79593760b9ef921ef1\` (\`email\`), PRIMARY KEY (\`id\`)) ENGINE=InnoDB`);
        await queryRunner.query(`CREATE TABLE \`outlet_docs\` (\`createdAt\` datetime(2) NOT NULL DEFAULT CURRENT_TIMESTAMP(2), \`updatedAt\` datetime(2) NOT NULL DEFAULT CURRENT_TIMESTAMP(2) ON UPDATE CURRENT_TIMESTAMP(2), \`id\` int NOT NULL AUTO_INCREMENT, \`outletId\` int NOT NULL, \`registrationKey\` varchar(255) NULL, \`gstKey\` varchar(255) NULL, \`mouKey\` varchar(255) NULL, PRIMARY KEY (\`id\`)) ENGINE=InnoDB`);
        await queryRunner.query(`CREATE TABLE \`client_outlet_mapping\` (\`clientOutletMappingId\` int NOT NULL AUTO_INCREMENT, \`clientId\` int NOT NULL, \`outletId\` int NOT NULL, PRIMARY KEY (\`clientOutletMappingId\`)) ENGINE=InnoDB`);
        await queryRunner.query(`CREATE TABLE \`client_docs\` (\`createdAt\` datetime(2) NOT NULL DEFAULT CURRENT_TIMESTAMP(2), \`updatedAt\` datetime(2) NOT NULL DEFAULT CURRENT_TIMESTAMP(2) ON UPDATE CURRENT_TIMESTAMP(2), \`id\` int NOT NULL AUTO_INCREMENT, \`clientId\` int NOT NULL, \`panKey\` varchar(255) NULL, \`aadhaarKey\` varchar(255) NULL, PRIMARY KEY (\`id\`)) ENGINE=InnoDB`);
        await queryRunner.query(`ALTER TABLE \`address\` ADD CONSTRAINT \`FK_b18fdd2e72819569958ab5bd10d\` FOREIGN KEY (\`outletId\`) REFERENCES \`outlets\`(\`id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`coupon_outlet_mapping\` ADD CONSTRAINT \`FK_052ef7f11c87e0a2a5f29d27ce3\` FOREIGN KEY (\`couponId\`) REFERENCES \`coupon_entity\`(\`id\`) ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`coupon_outlet_mapping\` ADD CONSTRAINT \`FK_76bd118d68cd7f911214b0e3ed0\` FOREIGN KEY (\`outletId\`) REFERENCES \`outlets\`(\`id\`) ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`order_items\` ADD CONSTRAINT \`FK_f1d359a55923bb45b057fbdab0d\` FOREIGN KEY (\`orderId\`) REFERENCES \`orders\`(\`orderId\`) ON DELETE CASCADE ON UPDATE NO ACTION`);
    }

    public async down(queryRunner: QueryRunner): Promise<void> {
        await queryRunner.query(`ALTER TABLE \`order_items\` DROP FOREIGN KEY \`FK_f1d359a55923bb45b057fbdab0d\``);
        await queryRunner.query(`ALTER TABLE \`coupon_outlet_mapping\` DROP FOREIGN KEY \`FK_76bd118d68cd7f911214b0e3ed0\``);
        await queryRunner.query(`ALTER TABLE \`coupon_outlet_mapping\` DROP FOREIGN KEY \`FK_052ef7f11c87e0a2a5f29d27ce3\``);
        await queryRunner.query(`ALTER TABLE \`address\` DROP FOREIGN KEY \`FK_b18fdd2e72819569958ab5bd10d\``);
        await queryRunner.query(`DROP TABLE \`client_docs\``);
        await queryRunner.query(`DROP TABLE \`client_outlet_mapping\``);
        await queryRunner.query(`DROP TABLE \`outlet_docs\``);
        await queryRunner.query(`DROP INDEX \`IDX_6436cc6b79593760b9ef921ef1\` ON \`client\``);
        await queryRunner.query(`DROP TABLE \`client\``);
        await queryRunner.query(`DROP TABLE \`order_items\``);
        await queryRunner.query(`DROP TABLE \`appointments\``);
        await queryRunner.query(`DROP TABLE \`orders\``);
        await queryRunner.query(`DROP TABLE \`roles\``);
        await queryRunner.query(`DROP TABLE \`order_fulfillment_otp\``);
        await queryRunner.query(`DROP TABLE \`otp\``);
        await queryRunner.query(`DROP TABLE \`resources\``);
        await queryRunner.query(`DROP INDEX \`IDX_de87485f6489f5d0995f584195\` ON \`admin\``);
        await queryRunner.query(`DROP INDEX \`IDX_dc1eecd88112832edb8329ba7b\` ON \`admin\``);
        await queryRunner.query(`DROP INDEX \`IX_admins_email\` ON \`admin\``);
        await queryRunner.query(`DROP INDEX \`IX_admins_contactNumber\` ON \`admin\``);
        await queryRunner.query(`DROP TABLE \`admin\``);
        await queryRunner.query(`DROP TABLE \`coupon_outlet_mapping\``);
        await queryRunner.query(`DROP INDEX \`IDX_8e9805197ff5ac6ef181703bfb\` ON \`coupon_entity\``);
        await queryRunner.query(`DROP TABLE \`coupon_entity\``);
        await queryRunner.query(`DROP TABLE \`customer_coupon_redemption\``);
        await queryRunner.query(`DROP INDEX \`IDX_8536b8b85c06969f84f0c098b0\` ON \`customers\``);
        await queryRunner.query(`DROP INDEX \`IDX_725e85c19c7c199dcb6ea7e49a\` ON \`customers\``);
        await queryRunner.query(`DROP INDEX \`IX_customers_email\` ON \`customers\``);
        await queryRunner.query(`DROP INDEX \`IX_customers_contactNumber\` ON \`customers\``);
        await queryRunner.query(`DROP TABLE \`customers\``);
        await queryRunner.query(`DROP TABLE \`event_configuration_entity\``);
        await queryRunner.query(`DROP TABLE \`device_token\``);
        await queryRunner.query(`DROP INDEX \`REL_b18fdd2e72819569958ab5bd10\` ON \`address\``);
        await queryRunner.query(`DROP TABLE \`address\``);
        await queryRunner.query(`DROP TABLE \`outlets\``);
    }

}
